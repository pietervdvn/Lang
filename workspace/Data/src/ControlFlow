ControlFlow
-----------
Some miscallaneous, control flow functions, such as id, const, flip, if, ...
-----------

import Data.Bool
import Category.Eq

-- The identity function, returns it's argument
> id 42		= 42
~ id: a => id a 	= a
id	: a -> a
a	= a

--TODO change ''b'' into a ''.'' when the parser is fixed
-- The const function, returns it first argument (and ignores the second)
> const 42 True	= 42
const	: a -> b -> a
a _	= a

-- Conditional choice
> if True 1 2	= 1
> if False 1 2 	= 2
if		: Bool -> a -> a -> a
True  a _	= a
False _ b	= b


-- Takes a function with two arguments; returns a function with its arguments inversed
flip	: (a -> b -> c) -> b -> a -> c
f b a	= f a b

--- Same as "map", but with inversed arguments
(|)		: functor a -> (a -> b) -> (functor: Mappable) b
functor	f	= map f functor
---
